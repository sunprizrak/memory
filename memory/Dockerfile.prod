###########
# BUILDER #
###########

FROM python:3.12.1-alpine3.18 as builder

# set work directory
WORKDIR /usr/src/memory

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependecies
RUN apk update && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
COPY . .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/memory/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.12.1-alpine3.18

# create directory for the app
RUN mkdir -p /home/memory

# create the app user
RUN addgroup -S memory && adduser -S memory -G memory

# create the appropriate directories
ENV HOME=/home/memory
ENV APP_HOME=/home/memory/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/memory/wheels /wheels
COPY --from=builder /usr/src/memory/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R memory:memory $APP_HOME

# change to the app user
USER memory

ENTRYPOINT ["sh", "/home/memory/web/entrypoint.prod.sh"]